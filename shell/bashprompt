# Colors
BOLD=$(tput bold)
RESET=$(tput sgr0)
BSET=${RESET}${BOLD}

RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
YELLOW=$(tput setaf 3)
BLUE=$(tput setaf 4)
MAGENTA=$(tput setaf 5)
CYAN=$(tput setaf 6)

# 256 color
RED256=$(tput setaf 124)
ORANGE256=$(tput setaf 172)
YELLOW256=$(tput setaf 221)
PURPLE256=$(tput setaf 162)
CYAN256=$(tput setaf 37)

# Git prompt (from https://github.com/paulirish/dotfiles)
function prompt_git() {
    # check if we're in a git repo. (fast)
    git rev-parse --is-inside-work-tree &>/dev/null || return

    # check for what branch we're on. (fast)
    #   if… HEAD isn’t a symbolic ref (typical branch),
    #   then… get a tracking remote branch or tag
    #   otherwise… get the short SHA for the latest commit
    #   lastly just give up.
    branchName="$(git symbolic-ref --quiet --short HEAD 2> /dev/null || \
        git describe --all --exact-match HEAD 2> /dev/null || \
        git rev-parse --short HEAD 2> /dev/null || \
        echo '(unknown)')";

    # check if it's dirty (slow)
    # technique via github.com/git/git/blob/355d4e173/contrib/completion/git-prompt.sh#L472-L475
    dirty=$(git diff --no-ext-diff --quiet --ignore-submodules --exit-code || echo -e "*")

    [ -n "${s}" ] && s=" [${s}]";
    echo -e "${1}${branchName}${2}$dirty";

    return
}

# Bash Prompt
function bash_prompt {
    local newline="\n"
    local prompt_symbol="$"

    # When calling functions in bash prompt, \ needed
    # in front of $(), otherwise will just evaluate
    # once and will not update.
    PS1=$BOLD
    # PS1=""

    # Set window title to working directory (\w)
    PS1+="\[\033]0;\w\007\]"
    PS1+=$newline

    # User (\u) and host (\h)
    PS1+="${RED256}\u ${BSET}at ${ORANGE256}\h ${BSET}in ${YELLOW256}\w${BSET}"

    # Git
    PS1+="\$(prompt_git \" on $PURPLE256\" \"$CYAN256\")"
    # PS1+="${RED}\u ${RESET}at ${YELLOW}\h ${RESET}in ${GREEN}\w"

    # Prompt symbol
    PS1+=$newline
    PS1+="${BSET}${prompt_symbol} "
    PS1+=$RESET

    export PS1
}

# Basic bash prompt
function basic_bash_prompt {
  # PS1='\u@\h: \w\n$ '
  PS1="\n\w$ "
  export PS1
}

# Set bash prompt
bash_prompt

# Remove function
unset bash_prompt
